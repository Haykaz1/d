using System;
using System.Threading.Tasks;

Task task1 = new Task(() => Console.WriteLine("Task1 is executed"));
task1.Start();
 
Task task2 = Task.Factory.StartNew(() => Console.WriteLine("Task2 is executed"));
 
Task task3 = Task.Run(() => Console.WriteLine("Task3 is executed"));
 
task1.Wait();   
task2.Wait();  
task3.Wait();
________________________________________________________________________________________________
using System;
using System.Threading.Tasks;
using System.Threading;

Console.WriteLine("Main Starts");
Task task1 = new Task(() =>
{
    Console.WriteLine("Task Starts");
    Thread.Sleep(1000);     
    Console.WriteLine("Task Ends");
 });
task1.Start(); 
task1.Wait();   
Console.WriteLine("Main Ends");
_________________________________________________________________________________________________
using System;
using System.Threading.Tasks;
using System.Threading;

Console.WriteLine("Main Starts");
Task task1 = new Task(() =>
{
    Console.WriteLine("Task Starts");
    Thread.Sleep(1000);     
    Console.WriteLine("Task Ends");
 });
task1.Start();  
Console.WriteLine("Main Ends");
task1.Wait();
_________________________________________________________________________________________________
using System;
using System.Threading.Tasks;
using System.Threading;

Console.WriteLine("Main Starts");
Task task1 = new Task(() =>
{
    Console.WriteLine("Task Starts");
    Thread.Sleep(1000); 
    Console.WriteLine("Task Ends");
 });
task1.RunSynchronously(); 
Console.WriteLine("Main Ends");
___________________________________________________________________________________________________
using System;
using System.Threading.Tasks;
using System.Threading;

Task task1 = new Task(() =>
{
    Console.WriteLine($"Task{Task.CurrentId} Starts");
    Thread.Sleep(1000);
    Console.WriteLine($"Task{Task.CurrentId} Ends");
 });
task1.Start();

Console.WriteLine($"task1 Id: {task1.Id}");
Console.WriteLine($"task1 is Completed: {task1.IsCompleted}");
Console.WriteLine($"task1 Status: {task1.Status}");
 
task1.Wait();
