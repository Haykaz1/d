using System;   

Person person = new Person();
Car car = new Car();
DoAction(person);
DoAction(car);
 
void DoAction(IMovable movable) => movable.Move();
 
interface IMovable
{
    void Move();
}
class Person : IMovable
{
    public void Move() => Console.WriteLine("Человек идет");
}
struct Car : IMovable
{
    public void Move() => Console.WriteLine("Машина едет");
}
____________________________________________________________________
using System;   

IMovable tom = new Person();
Car tesla = new Car();
tom.Move();     
tesla.Move();   
interface IMovable
{
    void Move() => Console.WriteLine("Walking");
}
class Person : IMovable { }
class Car : IMovable
{
    public void Move() => Console.WriteLine("Driving");
}
________________________________________________________________________
using System;   

Message hello = new Message("Hello World");
hello.Print();  
 
interface IMessage
{
    string Text { get; set; }
}
interface IPrintable
{
    void Print();
}
class Message : IMessage, IPrintable
{
    public string Text { get; set; }
    public Message(string text) => Text = text;
    public void Print()=> Console.WriteLine(Text);
}
